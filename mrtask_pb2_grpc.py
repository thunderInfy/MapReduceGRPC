# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import mrtask_pb2 as mrtask__pb2


class MRTaskStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendTask = channel.unary_unary(
        '/mapreducetask.MRTask/SendTask',
        request_serializer=mrtask__pb2.IDemandATask.SerializeToString,
        response_deserializer=mrtask__pb2.Task.FromString,
        )
    self.TaskDone = channel.unary_unary(
        '/mapreducetask.MRTask/TaskDone',
        request_serializer=mrtask__pb2.IAmDone.SerializeToString,
        response_deserializer=mrtask__pb2.Okay.FromString,
        )


class MRTaskServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SendTask(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TaskDone(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MRTaskServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendTask': grpc.unary_unary_rpc_method_handler(
          servicer.SendTask,
          request_deserializer=mrtask__pb2.IDemandATask.FromString,
          response_serializer=mrtask__pb2.Task.SerializeToString,
      ),
      'TaskDone': grpc.unary_unary_rpc_method_handler(
          servicer.TaskDone,
          request_deserializer=mrtask__pb2.IAmDone.FromString,
          response_serializer=mrtask__pb2.Okay.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mapreducetask.MRTask', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
